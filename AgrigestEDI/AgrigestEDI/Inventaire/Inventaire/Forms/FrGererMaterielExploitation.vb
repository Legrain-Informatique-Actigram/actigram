Public Class FrGererMaterielExploitation

#Region "Form"
    Private Sub FrGererMaterielExploitation_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        SetChildFormIcon(Me)

        Me.ChargerDonnees()

        Me.MATERIELTableAdapter.Fill(Me.DataSetBaremes.MATERIEL)

        Me.MaterielBindingSource.Sort = "LIBELLE_MATERIEL ASC"
    End Sub

    Private Sub FrGererMaterielExploitation_FormClosing(ByVal sender As System.Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles MyBase.FormClosing
        If Not (Me.Enregistrer()) Then
            e.Cancel = True
        End If
    End Sub
#End Region

#Region "Button"
    Private Sub ImporterButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If (MsgBox("Confirmez-vous l'import du matériel du dossier précédent ?", MsgBoxStyle.YesNo, "") = MsgBoxResult.Yes) Then
            Me.Importer()
        End If
    End Sub
#End Region

#Region "ToolStrip1"
    Private Sub ToolStripButtonAjouter_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripButtonAjouter.Click
        Dim inventaireMaterielDR As DataSetAgrigest.InventaireMaterielRow = CType(Me.DataSetAgrigest.InventaireMateriel.NewRow(), AgrigestEDI.DataSetAgrigest.InventaireMaterielRow)

        inventaireMaterielDR.DDossier = My.User.Name

        Me.DataSetAgrigest.InventaireMateriel.AddInventaireMaterielRow(inventaireMaterielDR)
    End Sub

    Private Sub ToolStripButtonEnregistrer_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripButtonEnregistrer.Click
        Me.Enregistrer()
    End Sub

    Private Sub ToolStripButtonSupprimer_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripButtonSupprimer.Click
        Dim listeLignesSelectionnees As List(Of DataSetAgrigest.InventaireMaterielRow) = Me.RecupererLignesSelectionnees()

        If (listeLignesSelectionnees.Count > 0) Then
            If (MsgBox("Confirmez-vous la suppression ?", MsgBoxStyle.YesNo, "") = MsgBoxResult.Yes) Then
                Me.SupprimerListeInventaireMateriel(listeLignesSelectionnees)
            End If
        End If
    End Sub

    Private Sub ImporterMaterielToolStripButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImporterMaterielToolStripButton.Click
        If (MsgBox("Confirmez-vous l'import du matériel du dossier précédent ?", MsgBoxStyle.YesNo, "") = MsgBoxResult.Yes) Then
            Me.Importer()
        End If
    End Sub
#End Region

#Region "DataGridViewInventaireBaremeMateriel"
    Private Sub DataGridViewInventaireBaremeMateriel_CellValueChanged(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles DataGridViewInventaireMateriel.CellValueChanged
        If (e.RowIndex > -1) Then
            'Par défaut, la valeur de la colonne LibelleMateriel = valeur de la colonne ID_MATERIEL
            If (Me.DataGridViewInventaireMateriel.Columns(e.ColumnIndex).Name = "ID_MATERIEL") Then
                If String.IsNullOrEmpty(CStr(Me.DataGridViewInventaireMateriel.Rows(e.RowIndex).Cells("LibelleMateriel").FormattedValue)) Then
                    Me.DataGridViewInventaireMateriel.Rows(e.RowIndex).Cells("LibelleMateriel").Value = Me.DataGridViewInventaireMateriel.Rows(e.RowIndex).Cells("ID_MATERIEL").FormattedValue
                End If
            End If
        End If
    End Sub
#End Region

#Region "Méthodes diverses"
    Private Sub ChargerDonnees()
        Me.InventaireMaterielTableAdapter.FillByDDossier(Me.DataSetAgrigest.InventaireMateriel, My.User.Name)
    End Sub

    Private Function Enregistrer() As Boolean
        Me.InventaireMaterielBindingSource.EndEdit()

        Me.InventaireMaterielTableAdapter.Update(Me.DataSetAgrigest.InventaireMateriel)

        Return True
    End Function

    Private Function RecupererLignesSelectionnees() As List(Of DataSetAgrigest.InventaireMaterielRow)
        Dim listeLignesSelectionnees As New List(Of DataSetAgrigest.InventaireMaterielRow)

        For Each dgvr As DataGridViewRow In Me.DataGridViewInventaireMateriel.SelectedRows
            If dgvr.DataBoundItem Is Nothing Then Continue For

            If Not TypeOf dgvr.DataBoundItem Is DataRowView Then Continue For

            Dim inventaireMaterielDR As DataSetAgrigest.InventaireMaterielRow = DirectCast(DirectCast(dgvr.DataBoundItem, DataRowView).Row, DataSetAgrigest.InventaireMaterielRow)

            listeLignesSelectionnees.Add(inventaireMaterielDR)
        Next

        Return listeLignesSelectionnees
    End Function

    Private Sub SupprimerListeInventaireMateriel(ByVal listeLignesSelectionnees As List(Of DataSetAgrigest.InventaireMaterielRow))
        For Each inventaireMaterielDR As DataSetAgrigest.InventaireMaterielRow In listeLignesSelectionnees
            inventaireMaterielDR.Delete()
        Next

        'Mise à jour de la base de données
        Me.Enregistrer()
    End Sub

    Private Sub Importer()
        Dim gestInventaireMat As New Inventaire.ClassesControleur.GestionnaireInventaireMateriel(My.Settings.dbDonneesConnectionString)

        Dim nbEnreg As Integer = gestInventaireMat.ImporterInventaireMaterielDeDossierPrecedent(My.User.Name)

        Me.ChargerDonnees()

        MsgBox("Import de " & nbEnreg & " matériel(s) terminé.", MsgBoxStyle.Information, "")
    End Sub
#End Region

End Class