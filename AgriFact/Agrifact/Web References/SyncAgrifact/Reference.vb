'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :2.0.50727.4016
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 2.0.50727.4016.
'
Namespace SyncAgrifact
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SrvSyncAgrifactSoap", [Namespace]:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact")>  _
    Partial Public Class SrvSyncAgrifact
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetProduitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCategorieOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCommandeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpDateProduitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpDateClientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.AgriFact.My.MySettings.Default.AgriFact_SyncAgrifact_SrvSyncAgrifact
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetProduitCompleted As GetProduitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCategorieCompleted As GetCategorieCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClientCompleted As GetClientCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCommandeCompleted As GetCommandeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpDateProduitCompleted As UpDateProduitCompletedEventHandler
        
        '''<remarks/>
        Public Event UpDateClientCompleted As UpDateClientCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/GetProduit", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProduit(ByVal user As String, ByVal pwd As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetProduit", New Object() {user, pwd})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetProduit(ByVal user As String, ByVal pwd As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetProduit", New Object() {user, pwd}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetProduit(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProduitAsync(ByVal user As String, ByVal pwd As String)
            Me.GetProduitAsync(user, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProduitAsync(ByVal user As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetProduitOperationCompleted Is Nothing) Then
                Me.GetProduitOperationCompleted = AddressOf Me.OnGetProduitOperationCompleted
            End If
            Me.InvokeAsync("GetProduit", New Object() {user, pwd}, Me.GetProduitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProduitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProduitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProduitCompleted(Me, New GetProduitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/GetCategorie", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCategorie(ByVal user As String, ByVal pwd As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCategorie", New Object() {user, pwd})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCategorie(ByVal user As String, ByVal pwd As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCategorie", New Object() {user, pwd}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCategorie(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCategorieAsync(ByVal user As String, ByVal pwd As String)
            Me.GetCategorieAsync(user, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCategorieAsync(ByVal user As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetCategorieOperationCompleted Is Nothing) Then
                Me.GetCategorieOperationCompleted = AddressOf Me.OnGetCategorieOperationCompleted
            End If
            Me.InvokeAsync("GetCategorie", New Object() {user, pwd}, Me.GetCategorieOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCategorieOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCategorieCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCategorieCompleted(Me, New GetCategorieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/GetClient", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClient(ByVal user As String, ByVal pwd As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetClient", New Object() {user, pwd})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetClient(ByVal user As String, ByVal pwd As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetClient", New Object() {user, pwd}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetClient(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClientAsync(ByVal user As String, ByVal pwd As String)
            Me.GetClientAsync(user, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClientAsync(ByVal user As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetClientOperationCompleted Is Nothing) Then
                Me.GetClientOperationCompleted = AddressOf Me.OnGetClientOperationCompleted
            End If
            Me.InvokeAsync("GetClient", New Object() {user, pwd}, Me.GetClientOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClientOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClientCompleted(Me, New GetClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/GetCommande", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCommande(ByVal user As String, ByVal pwd As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCommande", New Object() {user, pwd})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCommande(ByVal user As String, ByVal pwd As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCommande", New Object() {user, pwd}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCommande(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCommandeAsync(ByVal user As String, ByVal pwd As String)
            Me.GetCommandeAsync(user, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCommandeAsync(ByVal user As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetCommandeOperationCompleted Is Nothing) Then
                Me.GetCommandeOperationCompleted = AddressOf Me.OnGetCommandeOperationCompleted
            End If
            Me.InvokeAsync("GetCommande", New Object() {user, pwd}, Me.GetCommandeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCommandeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCommandeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCommandeCompleted(Me, New GetCommandeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/UpDateProduit", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpDateProduit(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("UpDateProduit", New Object() {user, pwd, ds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpDateProduit(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpDateProduit", New Object() {user, pwd, ds}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpDateProduit(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpDateProduitAsync(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet)
            Me.UpDateProduitAsync(user, pwd, ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpDateProduitAsync(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.UpDateProduitOperationCompleted Is Nothing) Then
                Me.UpDateProduitOperationCompleted = AddressOf Me.OnUpDateProduitOperationCompleted
            End If
            Me.InvokeAsync("UpDateProduit", New Object() {user, pwd, ds}, Me.UpDateProduitOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpDateProduitOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpDateProduitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpDateProduitCompleted(Me, New UpDateProduitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiWebCommande/SrvSyncAgrifact/UpDateClient", RequestNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", ResponseNamespace:="http://tempuri.org/ActiWebCommande/SrvSyncAgrifact", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpDateClient(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("UpDateClient", New Object() {user, pwd, ds})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpDateClient(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpDateClient", New Object() {user, pwd, ds}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpDateClient(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpDateClientAsync(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet)
            Me.UpDateClientAsync(user, pwd, ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpDateClientAsync(ByVal user As String, ByVal pwd As String, ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.UpDateClientOperationCompleted Is Nothing) Then
                Me.UpDateClientOperationCompleted = AddressOf Me.OnUpDateClientOperationCompleted
            End If
            Me.InvokeAsync("UpDateClient", New Object() {user, pwd, ds}, Me.UpDateClientOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpDateClientOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpDateClientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpDateClientCompleted(Me, New UpDateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub GetProduitCompletedEventHandler(ByVal sender As Object, ByVal e As GetProduitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProduitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub GetCategorieCompletedEventHandler(ByVal sender As Object, ByVal e As GetCategorieCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCategorieCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub GetClientCompletedEventHandler(ByVal sender As Object, ByVal e As GetClientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub GetCommandeCompletedEventHandler(ByVal sender As Object, ByVal e As GetCommandeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCommandeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub UpDateProduitCompletedEventHandler(ByVal sender As Object, ByVal e As UpDateProduitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpDateProduitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")>  _
    Public Delegate Sub UpDateClientCompletedEventHandler(ByVal sender As Object, ByVal e As UpDateClientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpDateClientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
